(mod
  (
    PROPOSAL_VALIDATOR
    PROPOSAL_LENGTH
    PROPOSAL_SOFTCLOSE_LENGTH
    ATTENDANCE_REQUIRED
    PASS_MARGIN  ; this is a percentage 0 - 10,000 - 51% would be 5100
    (@ proposal_announcement (announcement_source delegated_puzzle_hash announcement_args spend_or_update_flag))
    proposal_validator_solution
    delegated_puzzle_reveal  ; this is the reveal of the puzzle announced by the proposal
    delegated_solution  ; this is not secure unless the delegated puzzle secures it
  )
  (include utility_macros.clib)
  (include condition_codes.clvm)
  (include curry-and-treehash.clinc)

  ; if we're checking a proposal
  (assert (= (sha256tree delegated_puzzle_reveal) delegated_puzzle_hash)
    (c
      (list CREATE_PUZZLE_ANNOUNCEMENT (sha256tree (list announcement_source PROPOSAL_LENGTH PROPOSAL_SOFTCLOSE_LENGTH)))
      (c
	(list ASSERT_PUZZLE_ANNOUNCEMENT (sha256 announcement_source (sha256tree (list spend_or_update_flag delegated_puzzle_hash announcement_args))))
	(a
	  PROPOSAL_VALIDATOR
	  (list
	    ATTENDANCE_REQUIRED
	    PASS_MARGIN
	    proposal_announcement
	    proposal_validator_solution
	    (a delegated_puzzle_reveal delegated_solution)
	  )
	)
      )
    )
  )
)
