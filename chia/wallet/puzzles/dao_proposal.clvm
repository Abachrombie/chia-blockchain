(mod (
  SINGLETON_STRUCT
  PROPOSAL_MOD_HASH
  PROPOSAL_TIMER_MOD_HASH
  CAT_TAIL
  CURRENT_CAT_ISSUANCE
  PROPOSAL_PASS_PERCENTAGE
  TREASURY_ID
  TIMELOCK
  VOTES
  INNERPUZ  ; this is what runs if this proposal is successful
  solution
)
  (include condition_codes.clvm)
  (include curry-and-treehash.clinc)

  (defconstant TEN_THOUSAND 10000)

  (defun-inline calculate_win_percentage (CURRENT_CAT_ISSUANCE PROPOSAL_PASS_PERCENTAGE)
    (f (divmod (* CURRENT_CAT_ISSUANCE PROPOSAL_PASS_PERCENTAGE) TEN_THOUSAND))
  )

  (defun calculate_timer_puzhash (
    PROPOSAL_TIMER_MOD_HASH
    PROPOSAL_MOD_HASH
    CAT_TAIL
    CURRENT_CAT_ISSUANCE
    PROPOSAL_TIMELOCK
    PROPOSAL_PASS_PERCENTAGE
    MY_SINGLETON_STRUCT
    TREASURY_ID
    )
    (puzzle-hash-of-curried-function PROPOSAL_TIMER_MOD_HASH
                                     (sha256 ONE TREASURY_ID)
                                     (sha256tree MY_SINGLETON_STRUCT)
                                     (sha256 ONE PROPOSAL_PASS_PERCENTAGE)
                                     (sha256 ONE PROPOSAL_TIMELOCK)
                                     (sha256 ONE CURRENT_CAT_ISSUANCE)
                                     (sha256 ONE CAT_TAIL)
                                     (sha256 ONE PROPOSAL_TIMER_MOD_HASH)
                                     (sha256 ONE PROPOSAL_MOD_HASH)
    )
  )

  ; main
  (if solution
    ; if we've passed
    (c
      (list ASSERT_HEIGHT_RELATIVE 3)
      (c
        (list CREATE_PUZZLE_ANNOUNCEMENT TREASURY_ID)
        (c
          (list ASSERT_PUZZLE_ANNOUNCEMENT (sha256
            (calculate_timer_puzhash
              PROPOSAL_TIMER_MOD_HASH
              PROPOSAL_MOD_HASH
              CAT_TAIL
              CURRENT_CAT_ISSUANCE
              PROPOSAL_TIMELOCK
              PROPOSAL_PASS_PERCENTAGE
              MY_SINGLETON_STRUCT
              TREASURY_ID
            )
            (f (r SINGLETON_STRUCT))
            )
          )
          (if (> VOTES (calculate_win_percentage CURRENT_CAT_ISSUANCE PROPOSAL_PASS_PERCENTAGE))
            (a INNERPUZ solution)
            (x)
          )
        )
      )
    ; if we're taking votes
    ()
  )
)
