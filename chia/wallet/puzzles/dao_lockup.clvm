(mod (
  LOCKUP_MOD_HASH
  EPHEMERAL_VOTE_MODHASH
  CAT_MOD_HASH
  CAT_TAIL
  RETURN_ADDRESS
  PREVIOUS_VOTES
  LOCKUP_TIME
  spend_type
  my_id
  my_amount
  new_proposal_vote_id
  vote_info
)
  (include condition_codes.clvm)
  (include curry-and-treehash.clinc)

  (defun check_not_previously_voted (new_vote_id previous_votes)
    (if previous_votes
      (if (= new_vote_id (f previous_votes))
        (x)
        (check_not_previously_voted new_vote_id (r previous_votes))
      )
      ()
    )
  )

  (defun curry_constants_into_ephemeral_vote_mod (LOCKUP_MOD_HASH EPHEMERAL_VOTE_MODHASH CAT_MOD_HASH CAT_TAIL LOCKUP_TIME)
    (puzzle-hash-of-curried-function EPHEMERAL_VOTE_MODHASH
                                     (sha256 ONE LOCKUP_TIME)
                                     (sha256 ONE CAT_TAIL)
                                     (sha256 ONE CAT_MOD_HASH)
                                     (sha256 ONE EPHEMERAL_VOTE_MODHASH)
                                     (sha256 ONE LOCKUP_MOD_HASH)
    )
  )

  (defun wrap_vote_in_cat_mod (CAT_MOD_HASH CAT_TAIL EPHEMERAL_VOTE_PUZHASH)
    (puzzle-hash-of-curried-function CAT_MOD_HASH
                                     EPHEMERAL_VOTE_PUZHASH
                                     (sha256 ONE CAT_TAIL)
                                     (sha256 ONE CAT_MOD_HASH)
    )
  )


  ; main
  (if spend_type

    ; vote again
    (c
      (list CREATE_COIN (curry_constants_into_ephemeral_vote_mod LOCKUP_MOD_HASH EPHEMERAL_VOTE_MODHASH LOCKUP_TIME) my_amount)
      (c
        (list ASSERT_MY_AMOUNT my_amount)
        (c
          (list ASSERT_COIN_ANNOUNCEMENT (sha256 (sha256 my_id (wrap_vote_in_cat_mod CAT_MOD_HASH CAT_TAIL (curry_constants_into_ephemeral_vote_mod LOCKUP_MOD_HASH EPHEMERAL_VOTE_MODHASH LOCKUP_TIME)) 0) (sha256tree (list RETURN_ADDRESS new_proposal_vote_id PREVIOUS_VOTES vote_info))))
          (c
            (list ASSERT_MY_COIN_ID my_id)
            (check_not_previously_voted new_proposal_vote_id PREVIOUS_VOTES)
          )
        )
      )
    )

    ; return to return_address
    (list (list ASSERT_HEIGHT_RELATIVE LOCKUP_TIME) (list CREATE_COIN RETURN_ADDRESS my_amount) (list ASSERT_MY_AMOUNT my_amount))
  )
)
