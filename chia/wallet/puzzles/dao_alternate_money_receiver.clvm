(mod (
  MINIMUM_INPUT_AMOUNT  ; this is a minimum of -1 to prevent money being removed, but can be increased to prevent DoS/spam
  MY_SINGLETON_STRUCT
  DOS_PROTECTION_BLOCK_HEIGHT  ; this is an adjustable parameter defining how often this code path can be run
  my_amount
  my_treasury_puzzle_hash
  amount_change
  input_coins
)
  (include condition_codes.clvm)
  (include curry-and-treehash.clinc)

  (defun-inline calculate_full_puzzle_hash (SINGLETON_STRUCT inner_puzzle_hash)
     (puzzle-hash-of-curried-function (f SINGLETON_STRUCT)
                                      inner_puzzle_hash
                                      (sha256tree SINGLETON_STRUCT)
     )
  )

  (defun create_announcements_for_payments (input_coins)
    (if input_coins
      (c
        (list CREATE_PUZZLE_ANNOUNCEMENT (f input_coins))  ; this allows coins to sync to us
        (c
          (list ASSERT_COIN_ANNOUNCEMENT (sha256 (f input_coins) '$'))
          (create_announcements_for_payments (r input_coins))
        )
      )
      ()
    )
  )

  (if (> amount_change MINIMUM_INPUT_AMOUNT)
    (c
      (list ASSERT_HEIGHT_RELATIVE DOS_PROTECTION_BLOCK_HEIGHT)
      (c
        (list ASSERT_MY_PUZZLEHASH (calculate_full_puzzle_hash MY_SINGLETON_STRUCT my_treasury_puzzle_hash))
        (c
          (list ASSERT_MY_AMOUNT my_amount)
          (c
            (list CREATE_COIN my_treasury_puzzle_hash (+ my_amount amount_change))
            (create_announcements_for_payments input_coins)
          )
        )
      )
    )
    (x)
  )

)
