[tool.poetry]
name = "chia-blockchain"
# see [tool.poetry-dynamic-versioning]
version = "0.1.0"
description = "Chia blockchain full node, farmer, timelord, and wallet."
authors = ["Mariano Sorgente <mariano@chia.net>"]
license = "Apache License"
readme = "README.md"
keywords= ["chia", "blockchain", "node"]
homepage = "https://chia.net/"
packages = [{ include = "chia"}]

[tool.poetry.scripts]
chia = "chia.cmds.chia:main"
chia_daemon = "chia.daemon.server:main"
chia_wallet = "chia.server.start_wallet:main"
chia_full_node = "chia.server.start_full_node:main"
chia_harvester = "chia.server.start_harvester:main"
chia_farmer = "chia.server.start_farmer:main"
chia_introducer = "chia.server.start_introducer:main"
chia_crawler = "chia.seeder.start_crawler:main"
chia_seeder = "chia.seeder.dns_server:main"
chia_timelord = "chia.server.start_timelord:main"
chia_timelord_launcher = "chia.timelord.timelord_launcher:main"
chia_full_node_simulator = "chia.simulator.start_simulator:main"
chia_data_layer = "chia.server.start_data_layer:main"
chia_data_layer_http = "chia.data_layer.data_layer_server:main"

[[tool.poetry.source]]
name = "chia"
url = "https://pypi.chia.net/simple/"
default = false
secondary = false

[tool.poetry.urls]
"Source" = "https://github.com/Chia-Network/chia-blockchain/"
"Changelog" = "https://github.com/Chia-Network/chia-blockchain/blob/main/CHANGELOG.md"

[tool.poetry.dependencies]
python = ">=3.7.2, <3.11"
aiofiles = "22.1.0"  # Async IO for files
aiohttp = "3.8.3"  # HTTP server for full node rpc
aiosqlite = "0.17.0"  # asyncio wrapper for sqlite, to store blocks
bitstring = "3.1.9"  # Binary data management library
blspy = "1.0.16"  # Signature library
chiabip158 = "1.1"  # bip158-style wallet filters
chiapos = "1.0.11"  # proof of space
chia_rs = "0.1.10"
chiavdf = "1.0.7"  # timelord and vdf verification
# TODO: when moving to click 8 remove the pinning of black noted below
click = "8.1.3"  # For the CLI
clvm = "0.9.7"
clvm_tools = "0.4.5"
clvm_tools_rs = "0.1.24"
colorama = "0.4.5"  # Colorizes terminal output
colorlog = "6.7.0"  # Adds color to logs
concurrent_log_handler = "0.9.20"  # Concurrently log and rotate logs
cryptography = "36.0.2"  # Python cryptography library for TLS - keyring conflict
dnspython = "2.2.1"  # Query DNS seeds
dnslib = "0.9.22"  # dns lib
filelock = "3.8.0"  # For reading and writing config multiprocess and multithread safely  (non-reentrant locks)
keyring = "23.9.3"  # Store keys in MacOS Keychain, Windows Credential Locker
# TODO: but...  keyrings_cryptfile goes 15 minutes without locking while this does in 75 seconds
"keyrings.cryptfile" = "1.3.4"  # Secure storage for keys on Linux (Will be replaced)
# See.cryptfile = "1.3.8"  # Secure storage for keys on Linux (Will be replaced)
# See https://github.com/frispete/keyrings.cryptfile/issues/15
packaging = "21.3"
psutil = "5.9.1"
pyyaml = "6.0"  # Used for config file format
setproctitle = "1.2.3"  # Gives the chia processes readable names
sortedcontainers = "2.4.0"  # For maintaining sorted mempools
typing-extensions = "4.3.0"  # typing backports like Protocol and TypedDict
watchdog = "2.1.9"  # Filesystem event watching - watches keyring.yaml
zstd = "1.5.2.6"

aiohttp_cors = { version = "^0.7.0", optional = true }
# TODO: black 22.1.0 requires click>=8, remove this pin after updating to click 8
black = { version = "22.8.0", optional = true }
build = { version = "^0.8", optional = true }
coverage = { version = "^6.4.1", optional = true }
diff-cover = { version = "^7.0.1", optional = true }
flake8 = { version = "^5.0.4", optional = true }
ipython = { version = "^8.4.0", python = ">=3.8", optional = true }
isort = { version = "^5.10.1", optional = true }
mypy = { version = "0.971", optional = true }
pre-commit = { version = "^2.18.1", optional = true }
py3createtorrent = { version = "^1.1.0", optional = true }
pyinstaller = { version = "5.3", optional = true }
pylint = { version = "^2.15.0", optional = true }
pytest = { version = "^7.1.2", optional = true }
pytest-asyncio = { version = "^0.19.0", optional = true }
pytest-monitor = { version = "^1.6.4", platform = "linux", optional = true }
pytest-xdist = { version = "^2.5.0", optional = true }
twine = { version = "^4.0.0", optional = true }
types-aiofiles = { version = "^0.8.6", optional = true }
types-cryptography = { version = "^3.3.18", optional = true }
types-pkg_resources = { version = "^0.1.3", optional = true }
types-pyyaml = { version = "^6.0.11", optional = true }
types-setuptools = { version = "^65.3.0", optional = true }

miniupnpc = { version = "2.2.2", source = "chia", optional = true }

uvloop = { version = "~0.17.0", optional = true }

[tool.poetry.extras]
dev = ["aiohttp_cors", "black", "build", "coverage", "diff-cover", "flake8", "ipython", "isort", "mypy", "pre-commit", "py3createtorrent", "pyinstaller", "pylint", "pytest", "pytest-asyncio", "pytest-monitor", "pytest-xdist", "twine", "types-aiofiles", "types-click", "types-cryptography", "types-pkg_resources", "types-pyyaml", "types-setuptools"]
upnp = ["miniupnpc"]
uvloop = ["uvloop"]

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
dirty = true
pattern = "default-unprefixed"
format-jinja = "{% if distance == 0 %}{{ base }}{% else %}{{ base }}.dev{{ distance }}{% endif %}{% if dirty %}+dirty{% endif %}"
style = "pep440"
bump = true

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version =  ['py37', 'py38', 'py39']
include = '''
^/(
    [^/]*.py
    | (benchmarks|build_scripts|chia|tests|tools)/.*\.pyi?
)$
'''
exclude = ''
