{
  "actions": [
    {
      "with": {
        "asset_types": [  # The in-order types of the asset
          # Everything except type can be optional
          {
            "type": "CAT",
            "asset_id": "0xhexstr"
          },
          {
            "type": "singleton",
            "launcher_id": "0xhexstr",
          },
          {
            "type": "metadata",
            "metadata": "<clvm_str>",
            "metadata_updater_hash": "0xhexstr",
          },
          {
            "type": "ownership",
            "owner": "0xhexstr" or "()",
            "transfer_program": "<clvm_str>",
          },
        ],
        "amount": "int",
      },
      "do": [
        {
          "type": "direct_payment",  # payments that go directly to their destination
          "payment": {
            "puzhash": "0xhexstr",
            "amount": "int",
            "memos": List["0xhexstr"],
          },
        },
        {
          "type": "offered_amount",  # amount that is free for anyone to take if dependencies are met
          "amount": "int",
        },
        {
          "type": "fee",  # discrepancy in change after all payments are made
          "amount": "int",
        },
        {
          "type": "update_metadata",  # update the existing state
          "new_metadata": "<clvm>",
        },
        {
          "type": "make_announcement",  # make an announcement of anything
          "announcement_type": Union["coin", "puzzle"],
          "announcement_data": <clvm_str>,
        },
        ...
      ]
    },
    ...  # Subsequent actions will attempt to use the additions from previous actions
  ]
  "bundle_actions": [
    ## Requested Payment
    {
      "type": "requested_payment",
      "asset_types": [  # The in-order types of the asset
        # Everything except type can be optional
        {
          "type": "CAT",
          "asset_id": "0xhexstr"
        },
        {
          "type": "singleton",
          "launcher_id": "0xhexstr",
        },
        {
          "type": "metadata",
          "metadata": "<clvm_str>",
          "metadata_updater_hash": "0xhexstr",
        },
        {
          "type": "ownership",
          "owner": "0xhexstr" or "()",
          "transfer_program": "<clvm_str>",
        },
      ],
      "nonce": "0xhexstr"
      "payments": [{
        "puzhash": "0xhexstr",
        "amount": "int",
        "memos": List["0xhexstr"],
      }],
    }

    ## DL Data Inclusion
    {
      "type": "require_dl_inclusion",
      "launcher_id": "0xhexstr",
      "values_to_prove": List["0xhexstr"]
    }
  ]
}